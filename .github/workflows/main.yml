on: [ pull_request, push ]
name: ci
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin main
    - uses: flux-framework/pr-validator@master

  ci-checks:
    runs-on: ubuntu-latest
    env:
      TAP_DRIVER_QUIET: 1
      FLUX_TEST_TIMEOUT: 300
    timeout-minutes: 20
    strategy:
      matrix:
        include:
        - name: "focal - ompi v5.0.x"
          image: "focal"
          ompi_branch: "v5.0.x"
          coverage: false
          env: {}
        - name: "focal - ompi v5.0.x, chain_lint"
          image: "focal"
          ompi_branch: "v5.0.x"
          coverage: false
          env:
            chain_lint: t
        - name: "centos8 - ompi v5.0.x, distcheck"
          image: "centos8"
          ompi_branch: "v5.0.x"
          coverage: false
          env:
            DISTCHECK: t
        - name: "centos8 - ompi v4.1.x"
          image: "centos8"
          ompi_branch: "v4.0.x"
          coverage: false
          env: {}
        - name: "coverage"
          image: "focal"
          ompi_branch: "v5.0.x"
          coverage: true
          env:
            COVERAGE: t
        - name: "fedora34 - ompi v5.0.x"
          image: "fedora34"
          ompi_branch: "v5.0.x"
          coverage: false
          env: {}

      fail-fast: false
    name: ${{ matrix.name }}
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
       ref: ${{ github.event.pull_request.head.sha }}
       fetch-depth: 0

    - name: docker-run-checks
      env: ${{ matrix.env }}
      run: >
        ./src/test/docker/docker-run-checks.sh
        -j $(nproc)
        -i ${{ matrix.image }}
        --build-arg OMPI_BRANCH=${{ matrix.ompi_branch }}
        --

    - name: annotate errors
      if: failure() || cancelled()
      run: src/test/checks-annotate.sh

    - name: coverage report
      if: success() && matrix.coverage
      env:
        DOCKER_REPO:
      uses: codecov/codecov-action@v1
      
